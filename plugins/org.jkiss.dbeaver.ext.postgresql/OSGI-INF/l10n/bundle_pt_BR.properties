#Generated by ResourceBundle Editor (http://essiembre.github.io/eclipse-rbe/) 
# data source provider #
datasource.postgresql.description = PostgreSQL JDBC connector

driver.edb.description        = Driver padr\u00E3o EDB
driver.gcloudpg.description   = Driver JDBC PostgreSQL Google Cloud SQL
driver.postgresql.description = Driver padr\u00E3o PostgreSQL
driver.materialize.description = Driver JDBC Materialize
driver.timescale.description  = Driver JDBC Timescale
driver.yugabytedb.description = Driver JDBC YugabyteDB
driver.cratedb.description = Driver JDBC CrateDB

handler.ssl.description = Secure socket layer
# network handler #
handler.ssl.name        = SSL

meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.description                   = O m\u00E9todo de acesso suporta escaneamento reverso?
# meta #
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.name                          = Pode escanear para tr\u00E1s
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.description                   = O m\u00E9todo de acesso suporta \u00EDndices multi-coluna?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.name                          = Permitir multi-col
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.description                      = O m\u00E9todo de acesso suporta escaneamentos ordenados classificados pelo valor de colunas indexadas?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.name                             = Pode ordenar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.description                  = O m\u00E9todo de acesso suporta escaneamentos ordenados classificados pelo resultado de um operador na coluna indexada?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.name                         = Pode ordenar por op
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.description                     = O m\u00E9todo de acesso suporta \u00EDndices unique?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.name                            = Pode unique
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.description                   = Um \u00EDndice desse tipo pode ser agrupado em cluster?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.name                          = Clusterable
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.description                       = OID de uma fun\u00E7\u00E3o de manipulador respons\u00E1vel por fornecer informa\u00E7\u00F5es sobre o m\u00E9todo de acesso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.name                              = Manipulador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.description                          = Nome do m\u00E9todo de acesso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.name                                 = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.description                      = Identificador de linha
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.name                             = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.description            = N\u00FAmero de estrat\u00E9gias do operador para este m\u00E9todo de acesso, ou zero se o m\u00E9todo de acesso n\u00E3o tiver um conjunto fixo de estrat\u00E9gias do operador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.name                   = Estrat\u00E9gias
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.description                   = O m\u00E9todo de acesso suporta um escaneamento sem nenhuma restri\u00E7\u00E3o para a primeira coluna do \u00EDndice?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.name                          = Chave opcional
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.description                     = Um \u00EDndice desse tipo gerencia bloqueios de predicado refinados?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.name                            = Pred locks
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.description                   = O m\u00E9todo de acesso suporta pesquisas ScalarArrayOpExpr?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.name                          = Matriz de pesquisa
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.description                   = O m\u00E9todo de acesso suporta pesquisas IS NULL/NOT NULL?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.name                          = Pesquisa de nulos
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.description                       = O tipo de dados de armazenamento de \u00EDndice se distingue do tipo de dados de coluna?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.name                              = Armazenamento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.description               = N\u00FAmero de rotinas de suporte para este m\u00E9todo de acesso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.name                      = Rotinas de suporte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.description                          = Atualmente sempre i para indicar um m\u00E9todo de acesso ao \u00EDndice; outros valores podem ser permitidos no futuro
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.name                                 = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.description                      = Coment\u00E1rio de fun\u00E7\u00E3o agregada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.name                             = Coment\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.description                         = Defini\u00E7\u00E3o de fun\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.name                                = Fun\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.description                       = Tipos de dados de entrada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.name                              = Entradas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.description                             = Nome de fun\u00E7\u00E3o agregada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.name                                    = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.description                         = ID do objeto de fun\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.name                                = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.description                       = Tipo de dados de sa\u00EDda
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.name                              = Tipo de sa\u00EDda
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.description                        = O collation definido da coluna, ou zero se a coluna n\u00E3o for de um tipo de dados afetado por collation.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.name                               = Collation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.defaultValue.description                     = Valor padr\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.defaultValue.name                            = Padr\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.description.description                      = Coment\u00E1rio na coluna
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.description.name                             = Coment\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.fullTypeName.description                     = Tipo de dados da coluna
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.fullTypeName.name                            = Tipo de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.generatedValue.description                   = Valor gerado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.generatedValue.name                          = Gerado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.description                         = Identidade de atributo (sempre ou por padr\u00E3o)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.name                                = Identidade
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.intervalTypeField.description                = Campos do tipo intervalo. Se ambos os campos e escala forem especificados,\r\n os campos precisam incluir SEGUNDOS, visto que a escala se aplica apenas aos segundos.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.intervalTypeField.name                       = Tipo de intervalo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.description                            = Esta coluna \u00E9 definida localmente na rela\u00E7\u00E3o. Perceba que uma coluna pode ser definida localmente e herdada simultaneamente.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.name                                   = Local
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.description                        = Se o tipo de dados especificar o tipo de uma sequ\u00EAncia de texto ou bit, esse campo especificar\u00E1 seu comprimento m\u00E1ximo declarado; NULL para todos os outros tipos de dados ou se o comprimento m\u00E1ximo n\u00E3o for declarado.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.name                               = Comprimento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.description                         = Atributo de ID de objeto unique
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.name                                = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.description                        = Se o tipo de dados contiver um tipo num\u00E9rico, esta coluna conter\u00E1 a precis\u00E3o (declarada ou impl\u00EDcita) do tipo para a coluna de destino.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.name                               = Precis\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.description                         = N\u00E3o nulo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.name                                = N\u00E3o nulo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.description                            = A escala determina o n\u00FAmero de d\u00EDgitos significativos \u00E0 direita do ponto decimal.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.name                                   = Escala
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.description             = Coment\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.name                    = Descri\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.description        = Vers\u00E3o instalada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.name               = Instalado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.description                    = Nome da extens\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.name                           = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.description                 = Vers\u00E3o de extens\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.name                        = Vers\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCharset.name.name                                      = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.description                          = LC_COLLATE para este objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.name                                 = Collate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.description                            = LC_CTYPE para este objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.name                                   = CType
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.description                       = Codifica\u00E7\u00E3o na qual o collation \u00E9 aplic\u00E1vel, ou -1 se funcionar para qualquer codifica\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.name                              = Codifica\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.description                             = Nome do collation (um \u00FAnico por namespace e codifica\u00E7\u00E3o)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.name                                    = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.objectId.name                                = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ownerId.name                                 = Propriet\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.provider.name                                = Provedor
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.description                           = O namespace que cont\u00E9m este collation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.name                                  = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.align.name                                    = Alinhamento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.analyzeFunc.name                              = Analizar fun\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDelimiter.name                           = Delimitador de array
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDim.name                                 = Array Dim
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayItemType.name                            = Tipo de item do array
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.baseType.name                                 = Tipo base
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.byValue.name                                  = Por valor
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.collationId.name                              = ID do collation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.description                        = Constraint (para tipos de dominio)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.name                               = Constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.defaultValue.name                             = Valor padr\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.description.name                              = Descri\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.elementType.name                              = Tipo de elemento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.description                        = Lista de poss\u00EDveis valores de enumera\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.name                               = Valor de enum
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.inputFunc.name                                = Fun\u00E7\u00E3o de entrada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modInFunc.name                                = Modo de fun\u00E7\u00E3o entrada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modOutFunc.name                               = Modo de fun\u00E7\u00E3o sa\u00EDda
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.notNull.name                                  = N\u00E3o nulo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.objectId.name                                 = ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.outputFunc.name                               = Fun\u00E7\u00E3o de sa\u00EDda
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.owner.name                                    = Propriet\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.preferred.name                                = Preferido
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.receiveFunc.name                              = Fun\u00E7\u00E3o de receber
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.sendFunc.name                                 = Fun\u00E7\u00E3o de envio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.storage.name                                  = Armazenamento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeCategory.name                             = Tipo de categoria
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeMod.name                                  = Tipo de modo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeType.name                                 = Tipo Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.allowConnect.name                             = Permitir conex\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.collate.name                                  = Collate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.connectionLimit.name                          = Limite de conex\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.ctype.name                                    = Ctype
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.dBA.name                                      = DBA
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultEncoding.name                          = Codifica\u00E7\u00E3o padr\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultTablespace.name                        = Tablespace padr\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.description                       = Descri\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.name                              = Descri\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.name.name                                     = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.template.name                                 = Modelo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.name.name                                   = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectId.name                               = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectType.name                             = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.schemaName.name                             = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.tableName.name                              = Tabela
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.enabledState.description                  = Controla em qual dos modos session_replication_role o evento \u00E9 acionado.\r\nO = \u00E9 acionado nos modos "origin" e "local", D = desabilitado, R = \u00E9 acionado no modo "replica", A = \u00E9 acionado sempre.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.enabledState.name                         = Estado habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.eventType.name                            = Tipo de evento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.function.name                             = Function/procedure
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreEventTrigger.objectId.name                             = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.conditions.description                       = Condi\u00E7\u00F5es de extens\u00F5es
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.conditions.name                              = Condi\u00E7\u00F5es
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.description                             = Nome da extens\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.name                                    = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.description                      = Pode ser realocado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.name                             = Reloc\u00E1vel
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.description                           = Schema instalado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.name                                  = Schema 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.description                           = Usando tabelas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.name                                  = Tabelas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.description                          = Vers\u00E3o instalada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.name                                 = Vers\u00E3o 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.handler.name                        = Manipulador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.name.name                           = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.options.name                        = Op\u00E7\u00F5es
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.owner.name                          = Propriet\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.validator.name                      = Validador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.foreignDataWrapper.name                  = Empacotamento de dados estrangeiros
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.name.name                                = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.options.name                             = Op\u00E7\u00F5es
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.owner.name                               = Propriet\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.type.name                                = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.version.name                             = Vers\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.manipulation.name                       = Manipula\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.objectDefinitionText.name               = Fonte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.orientation.name                        = Orienta\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.timing.name                             = Temporiza\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.description                         = M\u00E9todo de acesso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.name                                = M\u00E9todo de acesso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.checkXMin.name                                   = Checar X Min
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.clustered.name                                   = Agrupado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.description.name                                 = Coment\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.description                            = Se verdadeiro, este \u00EDndice suporta uma exclus\u00E3o de restri\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.name                                   = Exclus\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.description                            = Se verdadeiro, a verifica\u00E7\u00E3o de unicidade \u00E9 realizada diretamente ao adicionar dados (n\u00E3o aplic\u00E1vel se unique n\u00E3o for verdadeiro)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.name                                   = Imediato
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.description                        = N\u00FAmero de varreduras sequenciais feitas quando o argumento \u00E9 uma tabela ou n\u00FAmero de varreduras de \u00EDndice feitas quando o argumento \u00E9 um \u00EDndice
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.name                               = Num Scans
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexRelSize.description                         = Espa\u00E7o em disco usado pelo \u00EDndice
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexRelSize.name                                = Rel Size
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.objectDefinitionText.description                 = Defini\u00E7\u00E3o de \u00EDndice
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.objectDefinitionText.name                        = DDL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.description                  = \u00C1rvore de express\u00E3o para predicado de \u00EDndice parcial. Nulo se n\u00E3o for um \u00EDndice parcial.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.name                         = Predicado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.description                              = Este \u00EDndice representa a chave prim\u00E1ria da tabela (neste caso, o campo exclusivo tamb\u00E9m deve ser verdadeiro)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.name                                     = Prim\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.description                                = Se verdadeiro, o \u00EDndice est\u00E1 pronto para adicionar dados. Um valor falso indica que o \u00EDndice \u00E9 ignorado por INSERTS/UPDATES.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.name                                       = Pronto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.description                           = Tablespace do \u00EDndice
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.name                                  = Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.description                               = \u00CDndice unique
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.name                                      = Unique
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.description                                = Se verdadeiro, o \u00EDndice pode ser usado em consultas. False significa que o \u00EDndice est\u00E1 possivelmente incompleto: no entanto, ser\u00E1 alterado pelos comandos INSERT/UPDATE, mas \u00E9 seguro us\u00E1-lo em consultas quando poss\u00EDvel. Se for unique, a propriedade de unicidade tamb\u00E9m n\u00E3o \u00E9 garantida.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.name                                       = V\u00E1lido
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ascending.name                             = Ascendente
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.name.name                                  = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.nullable.name                              = Nullable
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.operatorClass.name                         = Classe de operador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ordinalPosition.name                       = Posi\u00E7\u00E3o ordinal
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.tableColumn.description                    = Coluna de tabela
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.tableColumn.name                           = Coluna de tabela
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJob.description.name                                   = Descri\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJob.enabled.name                                       = Habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJob.hostAgent.name                                     = Agente de host
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJob.jobClass.name                                      = Classe
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJob.name.name                                          = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobClass.name.name                                     = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobSchedule.description.name                           = Descri\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobSchedule.enabled.name                               = Habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobSchedule.end.name                                   = Fim
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobSchedule.name.name                                  = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobSchedule.start.name                                 = In\u00EDcio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.description.name                               = Descri\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.enabled.name                                   = Habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.kind.name                                      = Natureza
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.name.name                                      = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.objectDefinitionText.name                      = C\u00F3digo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.onError.name                                   = Em caso de erro
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.remoteConnectionString.name                    = Conex\u00E3o remota
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreJobStep.targetDatabase.name                            = Banco de dados de destino
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.handlerId.name                                = ID de manipulador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.inlineHandlerId.name                          = ID do manipulador inline
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.name.name                                     = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.objectId.name                                 = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.ownerId.name                                  = ID do propriet\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.trusted.name                                  = Confi\u00E1vel
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.userDefined.name                              = Confi\u00E1vel
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.validatorId.name                              = ID do validador
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.description                = Tablespace de vis\u00E3o materializada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.name                       = Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.withData.description                  = Com dados [NO]
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.withData.name                         = Populado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.default.name                             = Padr\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.family.name                              = Fam\u00EDlia
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.keyType.name                             = Tipo de chave
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.namespace.name                           = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.objectId.name                            = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.owner.name                               = Propriet\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.type.name                                = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.namespace.name                          = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.objectId.name                           = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.owner.name                              = Propriet\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.aggregate.name                               = Agregado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.body.name                                    = Corpo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.estRows.name                                 = Linhas Est
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.execCost.name                                = Custo Exec
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.kind.name                                    = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.language.name                                = Linguagem
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.description                        = A fun\u00E7\u00E3o n\u00E3o tem efeitos colaterais. Nenhuma informa\u00E7\u00E3o sobre seus argumentos \u00E9 fornecida, exceto atrav\u00E9s do valor de retorno. Qualquer fun\u00E7\u00E3o que possa produzir um erro, dependendo dos valores do argumento, n\u00E3o \u00E9 \u00E0 prova de vazamentos.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.name                               = \u00C0 prova de vazamentos
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectDefinitionText.name                    = Fonte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectId.name                                = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.description                            = O propriet\u00E1rio da fun\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.name                                   = Propriet\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procTransform.name                           = Transforma\u00E7\u00E3o Proc
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.description                     = A propriedade vol\u00E1til informa se o resultado de uma fun\u00E7\u00E3o depende apenas de seus argumentos de entrada ou se \u00E9 influenciado por fatores externos.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.name                            = Proc Volatilidade 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnType.name                              = Tipo de retorno
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.description                       = A fun\u00E7\u00E3o retorna um conjunto (ou seja, um conjunto de valores do tipo de dados especificado)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.name                              = Retorna conjuntos
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.securityDefiner.name                         = Definidor de seguran\u00E7a
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.description                           = A fun\u00E7\u00E3o retornar\u00E1 NULL se algum dos argumentos for NULL. Neste caso, a fun\u00E7\u00E3o n\u00E3o ser\u00E1 realmente chamada. Fun\u00E7\u00F5es que n\u00E3o s\u00E3o "estritas" devem ser preparadas para aceitar valores NULL.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.name                                  = Rigoroso
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.varArrayType.name                            = Tipo Var Array
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.window.name                                  = Janela
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.description            = Valor padr\u00E3o do par\u00E2metro
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.name                   = Padr\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.name.name                           = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.ordinalPosition.name                = Posi\u00E7\u00E3o ordinal
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterKind.name                  = Natureza da fun\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterType.name                  = Tipo de par\u00E2metro
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.bypassRls.name                                    = Ignorar Rls
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.canLogin.name                                     = Permite login
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.connLimit.name                                    = Limite de conex\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createDatabase.name                               = Criar banco de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createRole.name                                   = Criar role
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.inherit.name                                      = Herdar
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.name.name                                         = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectId.name                                     = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.password.name                                     = Senha
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.replication.name                                  = Replica\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.superUser.name                                    = Super usu\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.validUntil.name                                   = Valido at\u00E9
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.adminOption.name                            = Op\u00E7\u00F5es de admin
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.grantor.name                                = Concendente
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.member.name                                 = Role
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.owner.name                                  = Propri\u00E9t\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.description                               = Controla em qual dos modos session_replication_role a regra \u00E9 acionada. O = \u00E9 acionada nos modos "origin" e "local", D = desabilitada, R = \u00E9 acionada no modo "replica", A = \u00E9 sempre acionada.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.name                                      = Habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.description                               = Verdadeiro se a regra for uma regra INSTEAD
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.name                                      = Instead
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.description                                  = Nome da regra
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.name                                         = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectDefinitionText.name                         = Defini\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectId.name                                     = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.description                                  = Tipo de evento para o qual a regra \u00E9: 1 = SELECT, 2 = UPDATE, 3 = INSERT, 4 = DELETE
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.name                                         = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.dataTypes.name                                  = Tipos de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.database.name                                   = Banco de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.description                         = Coment\u00E1rio do schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.name                                = Coment\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.name.name                                       = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.objectId.name                                   = ID do namespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.owner.name                                      = Propriet\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.description         = Cache da sequ\u00EAncia
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.name                = Cache
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.description             = Se a sequ\u00EAncia \u00E9 c\u00EDclica
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.name                    = C\u00EDclica
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.description        = Valor de incremento da sequ\u00EAncia
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.name               = Incrementado por
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.description          = O \u00FAltimo valor da sequ\u00EAncia gravado no disco.\r\nSe o cache for usado, esse valor poder\u00E1 ser maior que o \u00FAltimo valor distribu\u00EDdo da sequ\u00EAncia. \r\nNulo se a sequ\u00EAncia ainda n\u00E3o tiver sido lida.\r\nTamb\u00E9m, se o usu\u00E1rio atual n\u00E3o tenha o privil\u00E9gio USAGE ou SELECT na sequ\u00EAncia, o valor \u00E9 nulo.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.name                 = \u00DAltimo valor
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.description           = Valor m\u00E1ximo da sequ\u00EAncia
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.name                  = Valor Max
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.description           = Valor m\u00EDnimo da sequ\u00EAncia
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.name                  = Valor Min
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.startValue.description         = Valor inicial da sequ\u00EAncia
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.startValue.name                = Valor inicial
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.name.name                                      = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.unit.name                                      = Unidade
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSetting.value.name                                     = Valor
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.hasOids.name                                     = Tem Oids
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.hasRowLevelSecurity.name                         = Possui seguran\u00E7a a n\u00EDvel de linha
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.description                         = Tabela de parti\u00E7\u00E3o por
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.name                                = Parti\u00E7\u00E3o por
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitions.name                                  = Parti\u00E7\u00F5es
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.subTables.name                                   = Sub Tabelas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.superTables.name                                 = Super Tabelas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.tablespace.name                                  = Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.description.name                             = Coment\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.objectId.name                                = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.description                            = Propriet\u00E1rio da tabela (criador)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.name                                   = Propriet\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.description                       = Op\u00E7\u00F5es espec\u00EDficas do m\u00E9todo de acesso, como strings "palavra-chave = valor"
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.name                              = Op\u00E7\u00F5es extras
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.description                     = Express\u00E3o de restri\u00E7\u00F5es CHECK
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.name                            = Express\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.description             = A restri\u00E7\u00E3o \u00E9 adi\u00E1vel?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.name                    = Adi\u00E1vel
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.description               = A restri\u00E7\u00E3o \u00E9 adiada por padr\u00E3o?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.name                      = Diferido
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.description            = Coment\u00E1rio de constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.name                   = Coment\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectDefinitionText.description   = Texto de defini\u00E7\u00E3o de constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectDefinitionText.name          = DDL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectId.name                      = ID do objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.attribute.name                   = Atributo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.ordinalPosition.name             = Posi\u00E7\u00E3o ordinal
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignOptions.name                       = Op\u00E7\u00F5es externas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignServer.name                        = Servidor externo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.associatedEntity.name                  = Entidade associada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.description                 = Regra de exclus\u00E3o para restri\u00E7\u00E3o de chave estrangeira: CASCADE, SET NULL, SET DEFAULT, RESTRICT ou NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.name                        = Excluir regra
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.description                  = MATCH FULL n\u00E3o permitir\u00E1 que uma coluna de uma chave estrangeira de v\u00E1rias colunas seja nula, a menos que todas as colunas de chave estrangeira sejam nulas.\r\nMATCH SIMPLE permite que algumas colunas de chave estrangeira sejam nulas, enquanto outras partes da chave estrangeira n\u00E3o s\u00E3o nulas.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.name                         = Tipo de correspond\u00EAncia
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.description       = Constraint referenciada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.name              = Constraint referenciada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.description                 = A regra de altera\u00E7\u00E3o para uma restri\u00E7\u00E3o de chave estrangeira \u00E9 CASCADE, SET NULL, SET DEFAULT, RESTRICT ou NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.name                        = Regra de update
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKeyColumn.referencedColumn.name            = Coluna referenciada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.description          = Entidade associada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.name                 = Entidade associada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.sequenceNum.name                      = Sequ\u00EAncia Num
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePartition.partitionExpression.name                = Express\u00E3o de parti\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.check.name                                 = Com verifica\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.event.name                                 = Evento
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.name.name                                  = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.role.name                                  = Role
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.type.name                                  = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePolicy.using.name                                 = Usando
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.description                        = Espa\u00E7o total em disco usado pela tabela especificada, incluindo todos os \u00EDndices e dados TOAST
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.name                               = Espa\u00E7o em disco
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.description                     = Espa\u00E7o em disco usado pela bifurca\u00E7\u00E3o 'main'
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.name                            = Tamanho Rel
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCount.name                                = N\u00FAmero de linhas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCountEstimate.name                        = Estimativa de n\u00FAmero de linhas
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.loc.name                                    = Localiza\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.name.name                                   = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.options.name                                = Op\u00E7\u00F5es
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.owner.name                                  = Propriet\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.actionTiming.name                              = Temporiza\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.description                         = Nomes das colunas da tabela, se o acionador for espec\u00EDfico da coluna
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.name                                = Coluna(s)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.description.name                               = Descri\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.description                       = Controla em qual dos modos session_replication_role o evento \u00E9 acionado. O = \u00E9 acionado nos modos "origin" e "local", D = desabilitado, R = \u00E9 acionado no modo "replica", A = \u00E9 acionado sempre.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.name                              = Habilitado
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.description                           = A fun\u00E7\u00E3o a ser chamada
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.name                                  = Fun\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.manipulationTypes.name                         = Manipula\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.name.name                                      = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectDefinitionText.name                      = Fonte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectId.name                                  = ID do Objeto
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.table.name                                     = Tabela
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.description                               = Tipo de trigger (ROW ou STATEMENT)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.name                                      = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.description                     = Express\u00E3o para a condi\u00E7\u00E3o WHEN do trigger
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.name                            = Express\u00E3o when
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTriggerBase.name.name                                  = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.foreignServer.name                         = Servidor externo
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.name.name                                  = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.serverOptions.name                         = Op\u00E7\u00F5es do servidor
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.userMappingOptions.name                    = Op\u00E7\u00F5es de mapeamento de usu\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.name.name                                         = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.objectDefinitionText.name                         = Fonte
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.name.name                                     = Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.objectDefinitionText.name                     = Fonte
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalSchema.externalOptions.name    = Op\u00E7\u00F5es externas
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.compressed.name          = Comprimido
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.inputFormat.name         = Formato de entrada
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.location.name            = Localiza\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.outputFormat.name        = Formato de saida
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.parameters.name          = Par\u00E2metros
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.serdeParameters.name     = Par\u00E2metros Serde
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.serializationLib.name    = Serializa\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.description = Codifica\u00E7\u00E3o da coluna. O tipo de compacta\u00E7\u00E3o aplicada a uma coluna de valores de dados \u00E0 medida que as linhas s\u00E3o adicionadas a uma tabela.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.name        = Codifica\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.distKey.description        = Verdadeiro se esta coluna for a chave de distribui\u00E7\u00E3o da tabela.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.distKey.name               = Chave Dist
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.fullTypeName.name          = Tipo de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.sortKey.description        = Ordem da coluna na chave de ordena\u00E7\u00E3o.\nSe a tabela usar uma chave de ordena\u00E7\u00E3o composta, todas as colunas que fazem parte da chave de ordena\u00E7\u00E3o ter\u00E3o um valor positivo que indica a posi\u00E7\u00E3o da coluna na chave de ordena\u00E7\u00E3o.\nSe a tabela usar uma chave de ordena\u00E7\u00E3o intercalada, todas as colunas que fazem parte da chave de ordena\u00E7\u00E3o t\u00EAm um valor alternadamente positivo ou negativo, em que o valor absoluto indica a posi\u00E7\u00E3o da coluna na chave de ordena\u00E7\u00E3o. \nSe 0, a coluna n\u00E3o faz parte de uma chave de ordena\u00E7\u00E3o.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.sortKey.name               = Chave de ordena\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_pid.name                                = PID do hold
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_user.name                               = Usu\u00E1rio do hold
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.statement_in.name                            = Instru\u00E7\u00E3o do hold
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_pid.name                                = PID do wait
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_statement.name                          = Instru\u00E7\u00E3o do wait
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_user.name                               = Usu\u00E1rio do wait
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.datname.name                             = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.description                       = P\u00E1gina / Tupla
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.name                              = P\u00E1g/Tpl
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.description                      = Concedida
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.name                             = +
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.locktype.name                            = Tipo
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.mode.name                                = Modo
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.pid.name                                 = PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.relation.description                     = Rela\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.relation.name                            = Rel.
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.description                          = ID de transa\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.name                                 = TID
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.actualRows.name                      = Linhas
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.cost.name                            = Custo
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.description                   = Entidade
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.name                          = Entidade
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeCondition.name                   = Condi\u00E7\u00E3o
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.description                 = Tipo de n\u00F3
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.name                        = Tipo de n\u00F3
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.totalTime.name                       = Tempo
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.appName.name                           = Nome do aplicativo
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.backendStart.name                      = In\u00EDcio de back-end
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.briefQuery.name                        = Consulta resumida
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientHost.name                        = Host cliente
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientPort.name                        = Porta do cliente
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.db.name                                = Banco de dados
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.pid.description                        = PID
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.pid.name                               = PID
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.queryStart.name                        = In\u00EDcio de consulta
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.state.name                             = Estado
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.stateChange.name                       = Mudan\u00E7a de estado
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.user.name                              = Usu\u00E1rio
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.xactStart.name                         = Iniciar Xact
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.analyzed.description            = Atualiza estat\u00EDsticas usadas pelo planejador para determinar o modo mais eficiente de executar uma consulta.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.analyzed.name                   = Analisado
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.disableSkipping.description     = Normalmente o VACUUM ignora p\u00E1ginas baseadas no mapeamento de visibilidade.\r\nP\u00E1ginas nas quais sabe-se que todos os tuples est\u00E3o em freeze podem ser ignoradas, e aquelas em que sabe-se que todos os tuples s\u00E3o vis\u00EDveis para todas as transa\u00E7\u00F5es podem ser ignoradas, exceto ao realizar um vacuum agressivo.\r\nAl\u00E9m disso, exceto quando realizar um vacuum agressivo, algumas p\u00E1ginas podem ser ignoradas com o intuito de evitar esperar que outras sess\u00F5es terminem de utiliz\u00E1-las.\r\nEsta op\u00E7\u00E3o desativa todo o comportamento de omiss\u00E3o de p\u00E1ginas e deve ser usado apenas quando achar que o conte\u00FAdo do mapeamento de visibilidade est\u00E1 suspeito, o que deve ocorrer apenas se houver uma falha de hardware ou software causando corrup\u00E7\u00E3o do banco de dados.\r\nCompat\u00EDvel desde o PostgreSQL 9.6.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.disableSkipping.name            = Desativar omiss\u00E3o de p\u00E1gina
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.freeze.description              = Opta "freezing" agressivo de tuples. Especificar FREEZE \u00E9 equivalente a efetuar VACUUM com os par\u00E2metros vacuum_freeze_min_age e vacuum_freeze_table_age definidos com zero.\r\nFreezing agressivo \u00E9 efetuado sempre quando a tabela \u00E9 reescrita, ent\u00E3o esta op\u00E7\u00E3o \u00E9 redundante quando FULL \u00E9 especificado.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.freeze.name                     = Freeze
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.full.description                = Opta pelo vacuum "full", o que pode reivindicar mais espa\u00E7o, mas leva muito mais tempo e trava tabelas exclusivamente.\r\nEste m\u00E9todo tamb\u00E9m requer espa\u00E7o em disco adicional, j\u00E1 que escreve uma nova c\u00F3pia da tabela e n\u00E3o libera a c\u00F3pia antiga at\u00E9 que a opera\u00E7\u00E3o tenha terminado.\r\nIsto s\u00F3 deve ser usado quando uma quantidade significativa de espa\u00E7o precisa ser reivindicada da tabela.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.full.name                       = Full
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.indexCleaning.description       = Especifica que o VACUUM deve tentar remover entradas de \u00EDndice que apontam para tuples prescritos.\r\n Normalmente este \u00E9 o comportamento desejado e ser\u00E1 o padr\u00E3o, a menos que a op\u00E7\u00E3o vacuum_index_cleanup\r\n seja definida como falsa para a tabela processada pelo vacuum. Definindo esta op\u00E7\u00E3o como falso\r\n pode ser \u00FAtil quando for necess\u00E1rio executar o vacuum o mais r\u00E1pido poss\u00EDvel, por exemplo, para\r\n evitar wraparound em ID de transa\u00E7\u00E3o iminentes.\r\n Por\u00E9m, se a limpeza de \u00EDndice n\u00E3o for efetuada regularmente, a performance pode ser afetada, pois\r\n enquanto a tabela \u00E9 modificada os \u00EDndices ir\u00E3o acumular tuples prescritos e a tabela ir\u00E1 acumular\r\n ponteiros para linhas mortas que n\u00E3o podem ser removidos at\u00E9 que a limpeza de \u00EDndice tenha terminado.\r\n Esta op\u00E7\u00E3o n\u00E3o ter\u00E1 efeito para tabelas que n\u00E3o tenham um \u00EDndice e \u00E9 ignorada se a op\u00E7\u00E3o FULL\r\n for utilizada.\r\nCompat\u00EDvel desde o PostgreSQL 12.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.indexCleaning.name              = Limpeza de \u00EDndices
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.skipLocked.description          = Especifica que o VACUUM n\u00E3o deve aguardar que quaisquer locks conflitantes sejam liberados ao come\u00E7ar\r\na processar uma rela\u00E7\u00E3o:\r\n se uma rela\u00E7\u00E3o n\u00E3o puder ser travada imediatamente sem que seja necess\u00E1rio esperar, a rela\u00E7\u00E3o \u00E9 ignorada.\r\n Perceba que mesmo com esta op\u00E7\u00E3o, o VACUUM ainda pode bloquear ao abrir os \u00EDndices de rela\u00E7\u00F5es.\r\n Al\u00E9m disso, o VACUUM ANALYZE ainda pode bloquear ao adquirir amostras de linhas de parti\u00E7\u00F5es, filhos\r\n de heran\u00E7as de tabelas e alguns tipos de tabelas estrangeiras.\r\n Tamb\u00E9m, ainda que o VACUUM habitualmente processe todas as parti\u00E7\u00F5es de todas as tabelas particionadas,\r\n esta op\u00E7\u00E3o far\u00E1 com que o VACUUM ignore todas as parti\u00E7\u00F5es se houver uma trava conflitante na tabela\r\n particionada.\r\nCompat\u00EDvel desde o PostgreSQL 12.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.skipLocked.name                 = Ignorar travados
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.truncated.description           = Especifica que o VACUUM deve tentar truncar qualquer p\u00E1gina vazia no final da tabela e permitir\r\n que espa\u00E7o em disco para p\u00E1ginas truncadas sejam devolvidas ao sistema operacional.\r\n Isto normalmente \u00E9 o comportamento esperado e \u00E9 o padr\u00E3o, a menos que a op\u00E7\u00E3o vacuum_truncate\r\n seja definida como falso para a tabela processada pelo vacuum. Definindo esta op\u00E7\u00E3o como falso\r\n pode ser \u00FAtil para evitar travas ACCESS EXCLUSIVE na tabela que for necess\u00E1rio truncar.\r\n Esta op\u00E7\u00E3o \u00E9 ignorada se a op\u00E7\u00E3o FULL for utilizada.\r\nCompat\u00EDvel desde o PostgreSQL 12.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolBaseVacuumSettings.truncated.name                  = Truncate
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolMViewRefreshSettings.withData.description          = Se WITH DATA for especificado (ou por padr\u00E3o) a consulta de apoio \u00E9 executada para fornecer novos dados e a view materializada \u00E9 deixada em um estado escane\u00E1vel.\r\nSe WITH NO DATA for especificado, nenhum dado novo \u00E9 gerado e a view materializada \u00E9 deixada em um estado n\u00E3o-escane\u00E1vel.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolMViewRefreshSettings.withData.name                 = With data
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.cascading.description        = Truncar automaticamente todas as tabelas que possuam refer\u00EAncias de chaves\r\n estrangeiras para quaisquer tabelas nomeadas, ou para qualquer tabela adicionada\r\n ao grupo devido a CASCADE.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.cascading.name               = Cascade
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.only.description             = Se ONLY n\u00E3o for especificado, a tabela e todas suas tabelas descendentes (se exisitirem) ser\u00E3o truncadas.
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.only.name                    = Only
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.restarting.description       = Reinicia automaticamente sequ\u00EAncias pertencentes a colunas da tabela(s) truncada(s).
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.restarting.name              = Reiniciar identidade
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.running.description          = Executar feramenta em uma transa\u00E7\u00E3o separada. Executar commit na transa\u00E7\u00E3o ativa antes da execu\u00E7\u00E3o da ferramenta e commit ap\u00F3s execu\u00E7\u00E3o bem-sucedida da ferramenta
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolTableTruncateSettings.running.name                 = Executar em transa\u00E7\u00E3o separada
meta.org.jkiss.dbeaver.ext.postgresql.tasks.PostgreToolWithStatus$ToolStatus.message.name                 = Mensagem

org.jkiss.dbeaver.task.category.postgreTool.description = Ferramentas de banco de dados do PostgreSQL
org.jkiss.dbeaver.task.category.postgreTool.name        = Ferramentas
org.jkiss.dbeaver.task.category.postgresql.description  = Tarefas de banco de dados do PostgreSQL

pgDatabaseRestore.confirmationMessage = Voc\u00EA est\u00E1 prestes a restaurar o banco de dados {0} de {1}.

provider.data.type.postgresql.description = Provedor de tipos de dados do PostgreSQL
# data type provider #
provider.data.type.postgresql.name        = Provedor de tipos de dados do PostgreSQL

task.pgDatabaseBackup.description    = Tarefa de dump de banco de dados do PostgreSQL
task.pgDatabaseBackup.name           = Dump do PosgreSQL
task.pgDatabaseBackupAll.description = Tarefa de dump global do PosgreSQL
task.pgDatabaseBackupAll.name        = Dump global do PostgreSQL
task.pgDatabaseRestore.description   = Tarefa de restaura\u00E7\u00E3o de banco de dados do PosgreSQL
task.pgDatabaseRestore.name          = Restaura\u00E7\u00E3o do PosgreSQL
task.pgScriptExecute.description     = Execu\u00E7\u00E3o de scripts do PostgreSQL
task.pgScriptExecute.name            = Scripts do PostgreSQL
task.pgToolTriggerDisable.name       = Desativar trigger
task.pgToolTriggerEnable.name        = Habilitar trigger

tasks.analyze.database.node.name     = Analisar banco de dados
tasks.analyze.table.node.description = Analisar tabela(s)
tasks.analyze.table.node.name        = Analisar tabela
tasks.mview.refresh.node.description = Atualizar view(s) materializada(s)
tasks.mview.refresh.node.name        = Atualizar view materializada
tasks.truncate.node.description      = Truncar tabela(s)
tasks.truncate.node.name             = Truncar tabela
tasks.vacuum.database.node.name      = Vacuum de banco de dados
tasks.vacuum.table.node.description  = Vacuum de tabela(s)
tasks.vacuum.table.node.name         = Vacuum de tabela

tree.accessMethod.node.name          = M\u00E9todo de acesso
tree.accessMethods.node.name         = M\u00E9todos de acesso
tree.administer.node.name            = Administrar
tree.administer.node.tip             = Administrar
tree.aggregate.node.name             = Agregar fun\u00E7\u00E3o
tree.aggregates.node.name            = Fun\u00E7\u00F5es agregadas
tree.aggregates.node.tip             = Fun\u00E7\u00F5es agregadas
tree.attribute.node.name             = Atributo
tree.attributes.node.name            = Atributos
tree.avalextension.node.name         = Extens\u00E3o dispon\u00EDvel
tree.avalextensions.node.name        = Extens\u00F5es dispon\u00EDveis
tree.collation.node.name             = Collation
tree.collations.node.name            = Collations
tree.column.node.name                = Coluna
tree.columns.node.name               = Colunas
tree.columns.node.tip                = Colunas de tabela
tree.constraint.columns.node.name    = Colunas de constraint
tree.constraint.node.name            = Constraint
tree.constraints.node.name           = Constraint
tree.constraints.node.tip            = Chaves unique de tabela
tree.database.node.name              = Banco de dados
tree.databases.node.name             = Bancos de dados
tree.dependencies.node.name          = Depend\u00EAncias
tree.dependencies.node.tip           = Depend\u00EAncias da tabela
tree.dependency.node.name            = Depend\u00EAncia
tree.encoding.node.name              = Codifica\u00E7\u00E3o
tree.encodings.node.name             = Codifica\u00E7\u00F5es
tree.event.trigger.node.name         = Trigger de evento
tree.event.triggers.node.name        = Triggers de evento
tree.event.triggers.node.tip         = Triggers de evento
tree.extension.node.name             = Extens\u00E3o
tree.extensions.node.name            = Extens\u00F5es
tree.extensions.node.tip             = Extens\u00F5es de banco de dados
tree.foreignDataWrapper.node.name    = Empacotador de dados estrangeiros
tree.foreignDataWrappers.node.name   = Empacotadores de dados estrangeiros
tree.foreignServer.node.name         = Servidor externo
tree.foreignServers.node.name        = Servidores externos
tree.foreign_key.node.name           = Chave estrangeira
tree.foreign_key.node.tip            = Chaves estrangeiras da tabela
tree.foreign_key_columns.node.name   = Colunas de chave estrangeira
tree.foreign_keys.node.name          = Chaves estrangeiras
tree.index.node.name                 = \u00CDndice
tree.index_columns.node.name         = Colunas de \u00EDndice
tree.indexes.node.name               = \u00CDndices
tree.indexes.node.tip                = \u00CDndices
tree.information.node.name           = Informa\u00E7\u00F5es do sistema
tree.information.node.tip            = Informa\u00E7\u00E3o
tree.job.class.node.name             = Classe
tree.job.classes.node.name           = Classes
tree.job.node.name                   = Job
tree.job.schedule.node.name          = Agendamento
tree.job.schedules.node.name         = Agendamentos
tree.job.step.node.name              = Passo
tree.job.steps.node.name             = Passos
tree.jobs.node.description           = Lista de jobs agendados a serem executados pelo pgAgent.
tree.jobs.node.name                  = Jobs
tree.language.node.name              = Linguagem
tree.languages.node.name             = Linguagens
tree.locks.node.name                 = Travas
tree.locks.node.tip                  = Gerenciador de travas de servidor
tree.mview.node.name                 = View materializada
tree.mviews.node.name                = Views materializadas
tree.mviews.node.tip                 = Views materializadas
tree.opClass.node.name               = Classe de operador
tree.opClasses.node.name             = Classes de operador
tree.opFamilies.node.name            = Fam\u00EDlias de operador
tree.opFamily.node.name              = Fam\u00EDlia de operador
tree.package.node.name               = Pacote
tree.packages.node.name              = Pacotes
tree.partition.node.name             = Parti\u00E7\u00E3o
tree.partition_columns.node.name     = Colunas de parti\u00E7\u00E3o
tree.partitions.node.name            = Parti\u00E7\u00F5es
tree.partitions.node.tip             = Parti\u00E7\u00F5es de tabela
tree.policies.node.name              = Pol\u00EDticas
tree.policies.node.tip               = Pol\u00EDticas RLS
tree.policy.node.name                = Pol\u00EDtica
tree.policy.node.tip                 = Pol\u00EDtica RLS
tree.procedure.node.name             = Fun\u00E7\u00E3o
tree.procedure_columns.node.name     = Par\u00E2metro de fun\u00E7\u00E3o
tree.procedures.node.name            = Fun\u00E7\u00F5es
tree.procedures.node.tip             = Fun\u00E7\u00F5es e procedures
tree.reference.node.name             = Refer\u00EAncia
tree.reference_columns.node.name     = Colunas de ref\u00EArencia
tree.references.node.name            = Refer\u00EAncias
tree.references.node.tip             = Ref\u00EArencias de tabela
tree.role.belong.node.name           = Role
tree.role.belongs.node.name          = Role
tree.role.belongs.node.tip           = Pertence
tree.role.member.node.name           = Role
tree.role.members.node.name          = Membros
tree.role.members.node.tip           = Membros
tree.role.node.name                  = Role
tree.roles.node.name                 = Roles
tree.roles.node.tip                  = Roles e usu\u00E1rios
tree.rule.node.name                  = Regra
tree.rules.node.name                 = Regras
tree.rules.node.tip                  = Regras de tabela
tree.schema.node.name                = Schema
tree.schemas.node.name               = Schemas
tree.schemas.node.tip                = Schemas
tree.sequence.node.name              = Sequ\u00EAncia
tree.sequences.node.name             = Sequ\u00EAncias
tree.sequences.node.tip              = Sequ\u00EAncias
tree.sessions.node.name              = Sess\u00F5es
tree.setting.node.name               = Configura\u00E7\u00E3o
tree.settings.node.name              = Configura\u00E7\u00F5es
tree.storage.node.name               = Armazenamento
tree.storage.node.tip                = Ger\u00EAncia de armazenamento
tree.table.node.name                 = Tabela
tree.tablechildren.node.name         = Tabelas filhas
tree.tablechildren_columns.node.name = Colunas da tabelas filhas
tree.tables.node.name                = Tabelas
tree.tables.node.tip                 = Tabelas
tree.tablespace.node.name            = Tablespace
tree.tablespaces.node.name           = Tablespace
tree.trigger.node.name               = Trigger
tree.triggers.node.name              = Triggers
tree.triggers.node.tip               = Triggers de tabela
tree.tview.node.name                 = View
tree.tviews.node.name                = Views
tree.tviews.node.tip                 = Views
tree.type.node.name                  = Tipo de dado
tree.types.node.name                 = Tipos de dados
tree.types.node.tip                  = Tipo de dado
tree.userMapping.node.name           = Mapeamento de usu\u00E1rio
tree.userMappings.node.name          = Mapeamentos de usu\u00E1rios
