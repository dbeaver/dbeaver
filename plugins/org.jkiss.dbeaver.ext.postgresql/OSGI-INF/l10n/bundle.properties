Bundle-Vendor = JKISS
Bundle-Name = DBeaver PostgreSQL Support

# meta #
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.name=Can backward scan
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canBackward.description=Does the access method support backward scanning?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.name=Handler
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.handler.description=OID of a handler function that is responsible for supplying information about the access method
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.name=Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.type.description=Currently always i to indicate an index access method; other values may be allowed in future

meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.name=Can multi col
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canMultiCol.description=Does the access method support multicolumn indexes?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.name=Can order
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrder.description=Does the access method support ordered scans sorted by the indexed column's value?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.name=Can order by op
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canOrderByOp.description=Does the access method support ordered scans sorted by the result of an operator on the indexed column?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.name=Can unique
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.canUnique.description=Does the access method support unique indexes?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.name=Clusterable
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.clusterable.description=Can an index of this type be clustered on?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.name.description=Name of the access method
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.objectId.description=Row identifier
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.name=Strategies
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.operatorStrategies.description=Number of operator strategies for this access method, or zero if access method does not have a fixed set of operator strategies
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.name=Optional key
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.optionalKey.description=Does the access method support a scan without any constraint for the first index column?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.name=Pred locks
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.predLocks.description=Does an index of this type manage fine-grained predicate locks?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.name=Search array
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchArray.description=Does the access method support ScalarArrayOpExpr searches?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.name=Search nulls
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.searchNulls.description=Does the access method support IS NULL/NOT NULL searches?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.name=Storage
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.storage.description=Can index storage data type differ from column data type?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.name=Support routines
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAccessMethod.supportRoutines.description=Number of support routines for this access method
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.dataType.name=Data type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.dataType.description=Column data type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.defaultValue.name=Default
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.defaultValue.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.description.name=Comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.description.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.name=Length
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.maxLength.description=If the data type specifies the type of a text or bit string, this field specifies its declared maximum length; NULL for all other data types, or if the maximum length is not declared.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.name=Precision
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.precision.description=If the data type contains a numeric type, this column contains the accuracy (declared or implicit) of the type for the target column.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.name=Not Null
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.required.description=Not Null
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.name=Scale
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.scale.description=The scale determines the number of significant digits to the right of the decimal point.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.name=Identity
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.identity.description=Attribute identity (always or by default)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.name=Local
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.local.description=This column is defined locally in the relation. Note that a column can be locally defined and inherited simultaneously.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.objectId.description=Attribute unique object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.name=Collation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAttribute.collation.description=The defined collation of the column, or zero if the column is not of a collatable data type.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.bypassRls.name=Bypass Rls
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.bypassRls.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.canLogin.name=Can Login
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.canLogin.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.connLimit.name=Conn Limit
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.connLimit.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createDatabase.name=Create Database
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createDatabase.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createRole.name=Create Role
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.createRole.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.inherit.name=Inherit
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.inherit.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.objectId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.password.name=Password
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.password.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.replication.name=Replication
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.replication.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.superUser.name=Super User
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.superUser.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.validUntil.name=Valid Until
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRole.validUntil.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.owner.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.member.name=Role
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.grantor.name=Grantor
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRoleMember.adminOption.name=Admin option

meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCharset.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCharset.name.description=

meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.name.description=Collation name (unique per namespace and encoding)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.name=Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.schema.description=The namespace that contains this collation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.provider.name=Provider
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ownerId.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.name=Encoding
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.encodingId.description=Encoding in which the collation is applicable, or -1 if it works for any encoding
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.name=CType
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.ctype.description=LC_CTYPE for this collation object
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.name=Collate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreCollation.collate.description=LC_COLLATE for this collation object


meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.objectId.name=ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.align.name=Align
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.align.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.analyzeFunc.name=Analyze Func
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.analyzeFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDelimiter.name=Array Delimiter
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDelimiter.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDim.name=Array Dim
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayDim.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayItemType.name=Array Item Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.arrayItemType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.baseType.name=Base Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.baseType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.byValue.name=By Value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.byValue.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.collationId.name=Collation Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.collationId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.defaultValue.name=Default Value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.defaultValue.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.elementType.name=Element Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.elementType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.inputFunc.name=Input Func
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.inputFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modInFunc.name=Mod In Func
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modInFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modOutFunc.name=Mod Out Func
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.modOutFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.notNull.name=Not Null
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.notNull.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.outputFunc.name=Output Func
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.outputFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.owner.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.owner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.preferred.name=Preferred
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.preferred.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.receiveFunc.name=Receive Func
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.receiveFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.sendFunc.name=Send Func
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.sendFunc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.storage.name=Storage
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.storage.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeCategory.name=Type Category
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeCategory.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeMod.name=Type Mod
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeMod.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeType.name=Type Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.typeType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.name=Enum values
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.enumValues.description=List of possible enumeration values
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.name=Constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataType.constraint.description=Constraint (for domain types)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.allowConnect.name=Allow Connect
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.allowConnect.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.collate.name=Collate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.collate.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.connectionLimit.name=Connection Limit
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.connectionLimit.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.ctype.name=Ctype
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.ctype.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.dBA.name=DBA
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.dBA.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultEncoding.name=Default Encoding
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultEncoding.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultTablespace.name=Default Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.defaultTablespace.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.name=Description
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.description.description=Description
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.template.name=Template
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDatabase.template.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.name.description=Extension name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.name=Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.schema.description=Installed schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.name=Version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.version.description=Installed version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.name=Relocatable
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.relocatable.description=Can be relocated
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.name=Tables
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.tables.description=Using tables
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.conditions.name=Conditions
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreExtension.conditions.description=ExtensionConditions
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.name.description=Extension name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.name=Version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.version.description=Extension version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.name=Installed
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.installedVersion.description=Installed version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.name=Description
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAvailableExtension.description.description=Comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.name.description=Aggregate function name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.name=Inputs
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.inputTypes.description=Input data types
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.name=Output type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.outputType.description=Output data type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.objectId.description=Function object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.name=Function
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.function.description=Function definition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.name=Comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreAggregate.description.description=Aggregate function comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.handler.name=Handler
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.handler.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.options.name=Options
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.options.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.owner.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.owner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.validator.name=Validator
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignDataWrapper.validator.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.foreignDataWrapper.name=Foreign Data Wrapper
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.foreignDataWrapper.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.options.name=Options
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.options.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.owner.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.owner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.type.name=Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.type.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.version.name=Version
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreForeignServer.version.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.foreignServer.name=Foreign Server
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.name.name=Nome
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.serverOptions.name=Server Options
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreUserMapping.userMappingOptions.name=User Mapping Options
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.manipulation.name=Manipulation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.manipulation.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.objectDefinitionText.name=Source
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.objectDefinitionText.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.orientation.name=Orientation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.orientation.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.timing.name=Timing
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreGenericTrigger.timing.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.name=Access Method
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.accessMethod.description=Access Method
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.checkXMin.name=Check X Min
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.checkXMin.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.clustered.name=Clustered
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.clustered.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.description.name=Comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.description.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.name=Predicate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.predicateExpression.description=Expression tree for partial index predicate. Null if not a partial index.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexRelSize.name=Rel Size
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexRelSize.description=Disk space used by index
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.name=Num Scans
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.indexNumScans.description=Number of sequential scans done when argument is a table, or number of index scans done when argument is an index
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.name=Exclusion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.exclusion.description=If true, this index supports a constraint-exclusion
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.name=Immediate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.immediate.description=If true, the uniqueness check is performed directly when adding data (not applicable if unique is not true)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.name=Primary
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.primary.description=This index represents the primary key of the table (in this case, the unique field must also be true)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.name=Ready
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.ready.description=If true, the index is ready to add data. A value of false indicates that the index is ignored for INSERTS/UPDATES.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.name=Unique
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.unique.description=Unique index
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.name=Valid
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.valid.description=If true, the index can be used in queries. False means the index is possibly incomplete: it will, however, be changed by the commands INSERT/UPDATE, but it's safe to use it in queries impossible. If it is unique, the uniqueness property is also not guaranteed.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.name=Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.tablespace.description=Index tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.objectDefinitionText.name=DDL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndex.objectDefinitionText.description=Index definition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ascending.name=Ascending
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ascending.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.nullable.name=Nullable
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.nullable.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ordinalPosition.name=Ordinal Position
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.ordinalPosition.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.tableColumn.name=Table Column
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.tableColumn.description=Table Column
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreIndexColumn.operatorClass.name=Operator Class
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.handlerId.name=Handler Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.handlerId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.inlineHandlerId.name=Inline Handler Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.inlineHandlerId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.objectId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.ownerId.name=Owner Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.ownerId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.trusted.name=Trusted
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.trusted.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.userDefined.name=User Defined
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.userDefined.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.validatorId.name=Validator Id
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreLanguage.validatorId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.kind.name=Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.aggregate.name=Aggregate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.aggregate.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.body.name=Body
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.body.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.estRows.name=Est Rows
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.estRows.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.execCost.name=Exec Cost
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.execCost.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.language.name=Language
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.language.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.name=Leakproof
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.leakproof.description=The function has no side effects. No information about its arguments is given except through the return value. Any function that may produce an error, depending on the argument values, is not leakproof.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectDefinitionText.name=Source
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.objectDefinitionText.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.owner.description=The owner of the function
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procTransform.name=Proc Transform
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procTransform.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.name=Proc Volatile
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.procVolatile.description=The volatile property tells whether the result of a function depends only on its input arguments or is influenced by external factors.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnType.name=Return Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.name=Returns Set
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.returnsSet.description=The function returns a set (that is, a set of values of the specified data type)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.securityDefiner.name=Security Definer
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.securityDefiner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.name=Strict
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.strict.description=The function returns NULL if any of the arguments are NULL. In this case, the function will not actually be called at all. Functions that are not "strict" must be prepared to accept NULL values.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.varArrayType.name=Var Array Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.varArrayType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.window.name=Window
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedure.window.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.ordinalPosition.name=Ordinal Position
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.ordinalPosition.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterKind.name=Parameter Kind
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterKind.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterType.name=Parameter Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.parameterType.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.name=Default
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreProcedureParameter.defaultValue.description=Parameter default value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.name.description=Rule name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.name=Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.type.description=Event type that the rule is for: 1 = SELECT, 2 = UPDATE, 3 = INSERT, 4 = DELETE
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.name=Enabled
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.enabled.description=Controls in which session_replication_role modes the rule fires. O = rule fires in "origin" and "local" modes, D = rule is disabled, R = rule fires in "replica" mode, A = rule fires always.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.name=Instead
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.instead.description=True if the rule is an INSTEAD rule
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreRule.objectDefinitionText.name = Definition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.dataTypes.name=Data Types
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.dataTypes.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.database.name=Database
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.database.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.objectId.name=Namespace ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.objectId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.name=Comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.description.description=Schema comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.owner.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSchema.owner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.name=Increment By
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.incrementBy.description=Increment value of the sequence
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.startValue.name=Start value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.startValue.description=Start value of the sequence
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.name=Last Value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.lastValue.description=The last sequence value written to disk.\nIf caching is used, this value can be greater than the last value handed out from the sequence.\nNull if the sequence has not been read from yet.\nAlso, if the current user does not have USAGE or SELECT privilege on the sequence, the value is null.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.name=Max Value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.maxValue.description=Maximum value of the sequence
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.name=Min Value
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.minValue.description=Minimum value of the sequence
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.name=Cache
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cacheValue.description=Cache of the sequence
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.name=Cycled
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreSequence$AdditionalInfo.cycled.description=	Whether the sequence cycles
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.hasOids.name=Has Oids
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.hasOids.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.subTables.name=Sub Tables
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.subTables.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.superTables.name=Super Tables
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.superTables.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.tablespace.name=Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.tablespace.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.name=Partition by
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitionKey.description=Partition table by
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTable.partitions.name=Partitions
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.objectId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.owner.description=Table owner (creator)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.name=Extra Options
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.relOptions.description=Access-method-specific options, as "keyword=value" strings
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.description.name=Comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableBase.description.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectDefinitionText.name=DDL
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectDefinitionText.description=Constraint definition text
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.name=Comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.description.description=Constraint comment
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.name=Deferrable
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferrable.description=Is the constraint deferrable?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.name=Deferred
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintBase.deferred.description=Is the constraint deferred by default?
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.name=Expression
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraint.source.description=Expression of CHECK constraints
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.attribute.name=Attribute
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.attribute.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.ordinalPosition.name=Ordinal Position
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableConstraintColumn.ordinalPosition.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignOptions.name=Foreign Options
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignOptions.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignServer.name=Foreign Server
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeign.foreignServer.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.associatedEntity.name=Associated Entity
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.associatedEntity.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.name=Match Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.matchType.description=MATCH FULL will not allow one column of a multicolumn foreign key to be null unless all foreign key columns are null.\nMATCH SIMPLE allows some foreign key columns to be null while other parts of the foreign key are not null. 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.name=Delete Rule
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.deleteRule.description=Deletion rule for foreign key constraint: CASCADE, SET NULL, SET DEFAULT, RESTRICT, or NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.name=Referenced Constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.referencedConstraint.description=Referenced Constraint
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.name=Update Rule
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKey.updateRule.description=The change rule for a foreign key constraint is CASCADE, SET NULL, SET DEFAULT, RESTRICT, or NO ACTION.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKeyColumn.referencedColumn.name=Referenced Column
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableForeignKeyColumn.referencedColumn.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.name=Associated Entity
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.associatedEntity.description=Associated Entity
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.sequenceNum.name=Sequence Num
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableInheritance.sequenceNum.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCount.name=Row Count
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCount.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCountEstimate.name=Row Count Estimate
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.rowCountEstimate.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.name=Disk Space
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.diskSpace.description=Total disk space used by the specified table, including all indexes and TOAST data
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.name=Rel Size
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTableReal.relationSize.description=Disk space used by the fork 'main'
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePartition.partitionExpression.name=Partition Expression
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablePartition.partitionExpression.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.options.name=Options
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.options.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.owner.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.owner.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.loc.name=Location
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTablespace.loc.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.description.name=Description
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.name=Enabled
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.enabledState.description=Controls in which session_replication_role modes the trigger fires. O = trigger fires in "origin" and "local" modes, D = trigger is disabled, R = trigger fires in "replica" mode, A = trigger fires always.
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.actionTiming.name=Timing
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.manipulationTypes.name=Manipulation
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.name=Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.type.description=Trigger type (ROW or STATEMENT)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.name=Column(s)
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.columnRefs.description=Table column names, if trigger is column-specific
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectDefinitionText.name=Source
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectDefinitionText.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.objectId.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.table.name=Table
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.table.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.name=When Expression
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.whenExpression.description=Expression for the trigger's WHEN condition
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.name=Function
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreTrigger.function.description=The function to be called
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.objectDefinitionText.name=Source
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreView.objectDefinitionText.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.name.name=Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.name.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.objectDefinitionText.name=Source
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreViewBase.objectDefinitionText.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.name=Tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.tablespace.description=Materialized view tablespace
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.withData.name=Populated
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreMaterializedView.withData.description=With [NO] Data
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.cost.name=Cost
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.cost.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.name=Entity
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.entity.description=Entity
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.name=Node Type
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeType.description=Node Type
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.actualRows.name=Rows
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.totalTime.name=Time
meta.org.jkiss.dbeaver.ext.postgresql.model.plan.PostgrePlanNodeBase.nodeCondition.name=Condition
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.appName.name=App Name
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.appName.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.backendStart.name=Backend Start
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.backendStart.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.briefQuery.name=Brief Query
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.briefQuery.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientHost.name=Client Host
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientHost.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientPort.name=Client Port
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.clientPort.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.db.name=Database
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.db.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.pid.name=PID
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.pid.description=PID
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.queryStart.name=Query Start
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.queryStart.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.state.name=State
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.state.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.stateChange.name=State Change
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.stateChange.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.user.name=User
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.user.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.xactStart.name=Xact Start
meta.org.jkiss.dbeaver.ext.postgresql.model.session.PostgreSession.xactStart.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_pid.name=Wait PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_pid.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_user.name=Wait User
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_user.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_pid.name=Hold PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_pid.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_user.name=Hold User
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.hold_user.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_statement.name=Wait Statement
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.wait_statement.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.statement_in.name=Hold Statement
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLock.statement_in.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.mode.name=Mode
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.mode.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.pid.name=PID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.pid.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.name=Page/Tpl
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.detail.description=Page / Tuple
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.datname.name=Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.datname.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.locktype.name=Type
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.locktype.description=
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.relation.name=Rel.
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.relation.description=Relation
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.name=TID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.tid.description=Transaction ID
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.name=+
meta.org.jkiss.dbeaver.ext.postgresql.model.lock.PostgreLockItem.granted.description=Granted 
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.default.name=Default
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.type.name=Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.keyType.name=Key type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.owner.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.namespace.name=Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorClass.family.name=Family
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.objectId.name=Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.owner.name=Owner
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreOperatorFamily.namespace.name=Schema

meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectId.name = Object ID
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.name.name = Name
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.objectType.name = Type
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.schemaName.name = Schema
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.tableName.name = Table
meta.org.jkiss.dbeaver.ext.postgresql.model.PostgreDependency.targetObject.name = Object

meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalSchema.externalOptions.name=External options
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.location.name=Location
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.parameters.name=Parameters
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.compressed.name=Compressed
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.outputFormat.name=Output format
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.inputFormat.name=Input format
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.serdeParameters.name=Serde parameters
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftExternalTable.serializationLib.name=Serialization
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.name=Encoding
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.columnEncoding.description=Encoding of column. The type of compression that is applied to a column of data values as rows are added to a table.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.distKey.name=Dist key
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.distKey.description=True if this column is the distribution key for the table.
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.sortKey.name=Sort key
meta.org.jkiss.dbeaver.ext.postgresql.model.impls.redshift.RedshiftTableColumn.sortKey.description=Order of the column in the sort key.\nIf the table uses a compound sort key, then all columns that are part of the sort key have a positive value that indicates the position of the column in the sort key.\nIf the table uses an interleaved sort key, then all each column that is part of the sort key has a value that is alternately positive or negative, where the absolute value indicates the position of the column in the sort key.\nIf 0, the column is not part of a sort key.

# data source provider #
datasource.postgresql.description=PostgreSQL JDBC connector

tree.accessMethod.node.name=Access Method
tree.accessMethods.node.name=Access Methods
tree.administer.node.name=Administer
tree.administer.node.tip=Administer
tree.attribute.node.name=Attribute
tree.attributes.node.name=Attributes
tree.collation.node.name=Collation
tree.collations.node.name=Collations
tree.column.node.name=Column
tree.columns.node.name=Columns
tree.columns.node.tip=Table columns
tree.constraint.columns.node.name=Constraint columns
tree.constraint.node.name=Constraint
tree.constraints.node.name=Constraints
tree.constraints.node.tip=Table unique keys
tree.database.node.name=Database
tree.databases.node.name=Databases
tree.encoding.node.name=Encoding
tree.encodings.node.name=Encodings
tree.extension.node.name=Extension
tree.extensions.node.name=Extensions
tree.extensions.node.tip=Database extensions
tree.avalextension.node.name=Available Extension
tree.avalextensions.node.name=Available Extensions
tree.foreignDataWrapper.node.name=Foreign data wrapper
tree.foreignDataWrappers.node.name=Foreign data wrappers
tree.foreignServer.node.name=Foreign server
tree.foreignServers.node.name=Foreign servers
tree.userMapping.node.name=User Mapping
tree.userMappings.node.name=User Mappings
tree.foreign_key.node.name=Foreign Key
tree.foreign_key.node.tip=Table foreign keys
tree.foreign_key_columns.node.name=Foreign key columns
tree.foreign_keys.node.name=Foreign Keys
tree.index.node.name=Index
tree.index_columns.node.name=Index columns
tree.indexes.node.name=Indexes
tree.indexes.node.tip=Indexes
tree.storage.node.name=Storage
tree.storage.node.tip=Storage management
tree.information.node.name=System Info
tree.information.node.tip=Information
tree.language.node.name=Language
tree.languages.node.name=Languages
tree.mview.node.name=Materialized View
tree.mviews.node.name=Materialized Views
tree.mviews.node.tip=Materialized views
tree.package.node.name=Package
tree.packages.node.name=Packages
tree.procedure.node.name=Function
tree.procedure_columns.node.name=Function parameters
tree.procedures.node.name=Functions
tree.procedures.node.tip=Functions and Procedures
tree.reference.node.name=Reference
tree.reference_columns.node.name=Reference columns
tree.references.node.name=References
tree.references.node.tip=Table references
tree.dependencies.node.name=Dependencies
tree.dependencies.node.tip=Table dependencies
tree.dependency.node.name=Dependency
tree.partition.node.name=Partition
tree.partition_columns.node.name=Partition columns
tree.partitions.node.name=Partitions
tree.partitions.node.tip=Table partitions
tree.tablechildren.node.name=Child tables
tree.tablechildren_columns.node.name=Child Tables columns
tree.rules.node.name=Rules
tree.rules.node.tip=Table rules
tree.rule.node.name=Rule
tree.schema.node.name=Schema
tree.schemas.node.name=Schemas
tree.schemas.node.tip=Schemas
tree.sequence.node.name=Sequence
tree.sequences.node.name=Sequences
tree.sequences.node.tip=Sequences
tree.sessions.node.name=Sessions
tree.locks.node.name=Locks
tree.locks.node.tip=Server locks manager
tree.table.node.name=Table
tree.tables.node.name=Tables
tree.tables.node.tip=Tables
tree.tablespace.node.name=Tablespace
tree.tablespaces.node.name=Tablespaces
tree.trigger.node.name=Trigger
tree.triggers.node.name=Triggers
tree.triggers.node.tip=Table triggers
tree.tview.node.name=View
tree.tviews.node.name=Views
tree.tviews.node.tip=Views
tree.type.node.name=Data type
tree.types.node.name=Data types
tree.types.node.tip=Data types
tree.aggregates.node.name=Aggregate functions
tree.aggregates.node.tip=Aggregate functions
tree.aggregate.node.name=Aggregate function
tree.role.node.name=Role
tree.roles.node.name=Roles
tree.roles.node.tip=Roles and users
tree.role.member.node.name=Role
tree.role.members.node.name=Members
tree.role.members.node.tip=Members
tree.role.belong.node.name=Role
tree.role.belongs.node.name=Roles
tree.role.belongs.node.tip=Belongs
tree.opClasses.node.name=Operator classes
tree.opClass.node.name=Operator class
tree.opFamilies.node.name=Operator families
tree.opFamily.node.name=Operator family

driver.postgresql.description=PostgreSQL standard driver
driver.edb.description=EnterpriseDB standard driver
driver.timescale.description=Timescale JDBC driver
driver.cockroach.description=CockroachDB JDBC driver

# data type provider #
provider.data.type.postgresql.name=PostgreSQL data types provider
provider.data.type.postgresql.description=PostgreSQL data types provider

# network handler #
handler.ssl.name=SSL
handler.ssl.description=Secure socket layer
